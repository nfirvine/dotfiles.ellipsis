#!/usr/bin/env node
// Wrapper around cake that will try to use shortcake if it's installed,
// otherwise swap arguments around so tasks are always last.

var path            = require('path'),
    cakeModule      = 'coffee-script/lib/coffee-script/cake',
    shortcakeModule = 'shortcake/lib/cli';

// Try to find module locally, then in /usr/local/lib/node_modules, then
// /usr/lib/node_modules.
function findModule(modPath) {
  try {
    return require.resolve(modPath);
  } catch (err) {
    modPath = path.join('/usr/local/lib/node_modules', modPath)
  }

  // Then look in /usr/lib
  try {
    return require.resolve(modPath);
  } catch (err) {
    modPath = modPath.replace('/usr/local/lib', '/usr/lib')
  }

  return require.resolve(modPath)
}

// Use cake
function cake() {
  try {
    require(findModule(cakeModule)).run()
  } catch (err) {
    if (/Cakefile not found in/.test(err.message))
      console.log(err.message)
    else
      throw err
  }
}

// Use shortcake
function shortcake() {
  require(findModule(shortcakeModule))
}

// Try shortcake, fallback to cake.
try {
  shortcake()
} catch (err) {
  cake()
}

// vim: ft=javascript:
